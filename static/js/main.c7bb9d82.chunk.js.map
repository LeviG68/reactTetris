{"version":3,"sources":["gameHelpers.js","img/bg.png","components/styled/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styled/StyledStage.js","components/styled/StyledCell.js","components/Cell.js","components/Stage.js","components/styled/StyledDisplay.js","components/Display.js","components/styled/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTeromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7bb9d82.chunk.js","sourcesContent":["export const STAGE_WIDTH= 12;\nexport const STAGE_HEIGHT= 20;\n\nexport const createStage = () =>\n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0,'clear'])\n    )\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n        for (let x = 0; x < player.tetromino[y].length; x += 1) {\n                //1. checkwe are on a actual tetromino cell\n                if(player.tetromino[y][x] !== 0 ) {\n                    if(\n                    // 2. check that our move is inside the game areas height (y)\n                    // We shouldn't go through the bottom of the play area.\n                    !stage[y + player.pos.y + moveY] ||\n                    // 3. Check that our move is inside the game area width (x).\n                    !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                    // 4. Check that the cell were moving to isnt set to clear.\n                    stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n                ) {\n                    return true;\n                }\n            }\n        }\n    }\n};","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\nwidth: 100vw;\nheight: 100vh;\nbackground: url(${bgImage}) #000;\nbackground-size: cover;\noverflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\ndisplay: flex;\nalign-items: flex-start;\npadding: 40px;\nmargin: 0 auto;\nmax-width: 900px;\n\n\naside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n}`\n;","export const TETROMINOS = {\n\n    0: { shape: [[0]], color: '0, 0, 0'},\n\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230',\n    },\n\n    J: {\n        shape: [\n            [0, 'J', 0, ],\n            [0, 'J', 0, ],\n            ['J', 'J', 0, ]\n           \n        ],\n        color: '36, 95, 223',\n    },\n\n    L: {\n        shape: [\n            [0, 'L', 0 ],\n            [0, 'L', 0 ],\n            [0, 'L', 'L' ]\n            \n        ],\n        color: '223, 173, 36',\n    },\n    O: {\n        shape: [\n            ['O', 'O'],\n            ['O', 'O'], \n        ],\n        color: '223, 217, 36',\n    },\n\n    S: {\n        shape: [\n            [0, 'S', 'S' ],\n            ['S', 'S', 0 ],\n            [0, 0, 0 ]\n            \n        ],\n        color: '48, 211, 56',\n    },\n\n    T: {\n        shape: [\n            [0, 0, 0 ],\n            ['T', 'T', 'T' ],\n            [0, 'T', 0 ]\n            \n        ],\n        color: '132, 61, 198',\n    },\n\n    Z: {\n        shape: [\n            ['Z', 'Z', 0 ],\n            [0, 'Z', 'Z' ],\n            [0, 0, 0 ]\n            \n        ],\n        color: '227, 78, 78',\n    }\n}\n\nexport const randomTetromino = () => { \n    const tetrominos= 'IJLOSTZ';\n    const randTeromino = \n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTeromino];\n};","import { useState, useEffect } from 'react';\n\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    const [rowsCleared, setRowsCleared] = useState(0);\n\n    useEffect(() => {\n        setRowsCleared(0);\n\n        const sweepRows = newStage =>\n            newStage.reduce((ack, row) => {\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\n                    setRowsCleared(prev => prev + 1);\n                    ack.unshift(new Array(newStage[0].length).fill([0 , 'clear']));\n                    return ack;\n                }\n                    ack.push(row);\n                    return ack;\n\n                },[])\n\n        const updateStage = prevStage => {\n            // frist flush the stage\n            const newStage = prevStage.map(row =>\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n                );\n\n                // Then draw the tetromino\n                player.tetromino.forEach((row, y) => {\n                    row.forEach((value, x) => {\n                        if (value !== 0) {\n                            newStage[y + player.pos.y][x + player.pos.x] = [value, \n                            `${player.collided ? 'merged' : 'clear'}`,\n                        ];\n                        }\n                    });\n                });\n\n                // then check if we collided\n                if (player.collided) {\n                    resetPlayer();\n                    return sweepRows(newStage);\n                }\n\n                return newStage;\n        };\n\n        setStage(prev => updateStage(prev));\n    }, [player, resetPlayer]);\n\n    return[stage, setStage, rowsCleared];\n};","import styled from 'styled-components';\n\n\nexport const StyledStage = styled.div`\ndisplay: grid;\ngrid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n);\ngrid-template-columns: repeat(${props => props.width}, 1fr);\ngrid-gap: 1px;\nborder: 2px solid #333;\nwidth: 100%;\nmax-width: 25vw;\nbackground: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\nwidth: auto;\nbackground : rgba(${props => props.color}, 0.8);\nborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\nborder-bottom-color: rgba(${props => props.color}, 0.1);\nborder-right-color: rgba(${props => props.color}, 1);\nborder-top-color: rgba(${props => props.color}, 1);\nborder-left-color: rgba(${props => props.color}, 0.3);\n`;","import React from 'react';\nimport { StyledCell } from './styled/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n<StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default Cell;\n","import React from 'react';\n\nimport { StyledStage } from './styled/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}> \n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}</StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\nboxing-size: border-box;\ndisplay: flex;\nalign-items: center;\nmargin: 0 0 20px 0;\npadding: 20px;\nborder: 4px solid #333;\nmin-height: 30px;\nwidth: 100%;\nborder-radius: 20px;\ncolor: ${props=> (props.gameOver ? 'red' : '#999' )};\nbackground: #000;\nfont-family: Pixel, Arial, Helvetica, sans-serif;\nfont-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './styled/StyledDisplay';\n\n\nconst Display = ({gameOver, text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;\n","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.div`\n\nbox-sizing: border-box;\nmargin: 0 0 20px 0;\npadding: 20px;\nmin-height: 30px;\nwidth: 100%;\nborder-radius: 20px;\nborder: none;\ncolor: white;\nbackground: #333;\nfont-family: Pixel, Arial, Helvetica, sams-serif;\nfront-size: 1rem;\noutline: none;\ncoursor: pointer;\n`","import React from 'react';\n\nimport { StyledStartButton } from './styled/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n    <StyledStartButton onClick={callback}> Start Game </StyledStartButton>\n)\n\nexport default StartButton;","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n//styled components\nimport { StyledTetrisWrapper, StyledTetris } from './styled/StyledTetris';\n\n//Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n//Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n\n\tconst[dropTime, setDropTime]= useState(null);\n\tconst[gameOver, setGameOver]= useState(false);\n\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\tconst [score, setScore, rows, setRows, level, setLevel] =useGameStatus(rowsCleared);\n\nconsole.log('re-render');\n\nconst movePlayer = dir => {\n\tif (!checkCollision(player, stage, { x: dir, y: 0})){\n\t\tupdatePlayerPos({ x: dir, y: 0});\n\t}\t\n};\n\nconst keyUp =({ keyCode }) => {\n\tif (!gameOver) {\n\t\t//Activate the interval again when user released down arrow.\n\t\tif (keyCode === 40) {\n\t\t\tconsole.log(\"interval off\")\n\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\t\t}\n\t}\n};\n\nconst startGame = () => {\n\t// console.log('test')\n\t// Reset everything\n\tsetStage(createStage());\n\tsetDropTime(1000);\n\tresetPlayer();\n\tsetGameOver(false);\n\tsetScore(0);\n\tsetRows(0);\n\tsetLevel(0);\n\tsetGameOver(false);\n\n\n}\n\nconst drop = () => {\n\t//increase level when player has clearned 10 rows\n\tif(rows > (level + 1 ) * 10) {\n\t\tsetLevel(prev => prev + 1 );\n\t\t// Also increse speed\n\t\tsetDropTime(1000 / (level + 1) + 200);\n\t}\n\n\tif(!checkCollision(player, stage, {x: 0, y: 1 })) {\n\t\tupdatePlayerPos({ x: 0, y: 1, collided: false})\n\t} else {\n\t\t//Game over\n\t\tif(player.pos.y < 1) {\n\t\t\tconsole.log(\"Game Over!!!\");\n\t\t\tsetGameOver(true);\n\t\t\tsetDropTime(null)\n\t\t}\n\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\t}\n}\n\nconst dropPlayer = () => {\n\t// We dont need to run the interval when we use the arrow down to move the tetromino downwards. So deactivate it for now.\n\tsetDropTime(null);\n\tdrop();\n};\n\n// This one starts the game \n// Custom hook by Dan Abramov\nuseInterval(() => {\n\tdrop();\n}, dropTime);\n\nconst move = ({ keyCode }) => {\n\tif(!gameOver) {\n\t\tif(keyCode === 37) {\n\t\t\tmovePlayer(-1);\n\t\t} else if (keyCode === 39) {\n\t\t\tmovePlayer(1);\n\t\t} else if (keyCode === 40) {\n\t\t\tdropPlayer();\n\t\t} else if (keyCode === 38) {\n\t\t\tplayerRotate(stage, 1)\n\t\t}\n\t}\n}\n\n\n\n\n\treturn (\n\t\t<StyledTetrisWrapper \n\t\t\trole=\"button\" \n\t\t\ttabIndex=\"0\" \n\t\t\tonKeyDown={e => move(e)} \n\t\t\tonKeyUp={keyUp}>\n\t\t    <StyledTetris>\n\t\t\t    <Stage stage={stage} />\n\t\t\t        <aside>\n\t\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t\t<Display gameOver= {gameOver} text=\"Game Over\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t        <div>\n\t\t\t\t\t        <Display text={`Score: ${score}`} />\n\t\t\t\t\t        <Display text={`Rows: ${rows}`} />\n\t\t\t\t\t        <Display text={`Level: ${level}`} />\n\t\t\t\t        </div>\n\t\t\t\t\t\t)}\n\t\t\t\t       <StartButton callback={startGame}/>\n\t\t\t        </aside>\n\t\t\t</ StyledTetris>\n\t\t</ StyledTetrisWrapper>\n\t\t\n\t);\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\nimport {  TETROMINOS, randomTetromino } from '../tetrominos';\n\nexport const usePlayer = () => {\n    const [player, setPlayer]= useState({\n        pos: { x: 0, y: 0 },\n        tetromino: TETROMINOS[0].shape,\n        collided: false,\n    });\n\n    const rotate = (matrix, dir) => {\n        //make the rows to become columns (transpose)\n        const rotatedTetro = matrix.map((_, index) => matrix.map(col => col[index]),\n        );\n        //Reverse each row to get a rotated matrix\n        if ( dir > 0) return rotatedTetro.map(row => row.reverse());\n        return rotatedTetro.reverse();\n    };\n\n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n        while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n            clonedPlayer.pos.x  += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1));\n            if(offset > clonedPlayer.tetromino[0].length) {\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n\n        }\n\n        setPlayer(clonedPlayer);\n    };\n\n    const updatePlayerPos =  ({ x, y, collided }) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }));\n    };\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n            tetromino: randomTetromino().shape,\n            collided: false,\n        })\n    },[])\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n};","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n\n    const [score, setScore] =useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel]= useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        // we have score\n        if(rowsCleared > 0) {\n            // This is how original Tetris score is calulated\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev +rowsCleared);\n\n        } \n    },[level, linePoints, rowsCleared])\n\n    useEffect(() => {\n        calcScore();\n    },[calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, level, setLevel];\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","\nimport React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App =() => (\n  <div className=\"App\">\n    <Tetris />\n\n  </div>\n);\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}